{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","placeholder","min","step","required","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","creditList","concat","crypto","randomUUID","parseFloat","elements","toFixed","Date","toISOString","debitList","a","fetch","then","response","json","creditSum","debitSum","forEach","updatedAccountBalance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43dbc2de.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: ${this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;\n","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>${credit.amount} {credit.description} {date}</li>\n    })\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <br/>\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" placeholder=\"Description\"/>\n        <input type=\"number\" name=\"amount\" placeholder=\"Amount\" min=\"0\" step=\"0.01\" required/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>${debit.amount} {debit.description} {date}</li>\n    })\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <br/>\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" placeholder=\"Description\"/>\n        <input type=\"number\" name=\"amount\" placeholder=\"Amount\" min=\"0\" step=\"0.01\" required/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser});\n  }\n\n  // Update creditList after credit description + amount is submitted\n  addCredit = (e) => {\n    e.preventDefault();\n    this.setState({ creditList: this.state.creditList.concat([{\n      id: crypto.randomUUID(),\n      amount: parseFloat(e.target.elements.amount.value).toFixed(2),\n      description: e.target.elements.description.value,\n      date: new Date().toISOString(),\n    }]) });\n\n    this.setState({accountBalance: (parseFloat(this.state.accountBalance) + parseFloat(e.target.elements.amount.value)).toFixed(2)})\n  }\n\n  // Update debitList after debit description + amount is submitted\n  addDebit = (e) => {\n    e.preventDefault();\n    this.setState({ debitList: this.state.debitList.concat([{\n      id: crypto.randomUUID(),\n      amount: parseFloat(e.target.elements.amount.value).toFixed(2),\n      description: e.target.elements.description.value,\n      date: new Date().toISOString(),\n    }]) });\n\n    this.setState({accountBalance: (parseFloat(this.state.accountBalance) - parseFloat(e.target.elements.amount.value)).toFixed(2)})\n\n  }\n\n  // Grabs Credit/Debit data from API\n  async componentDidMount(){\n    await fetch('https://moj-api.herokuapp.com/credits').then((response) => response.json())\n    .then(credits => {\n        this.setState({ creditList: credits });\n    });\n    await fetch('https://moj-api.herokuapp.com/debits').then((response) => response.json())\n    .then(debits => {\n        this.setState({ debitList: debits});\n    });\n\n    let debits = this.state.debitList;\n    let credits = this.state.creditList;\n\n    let creditSum=0;\n    let debitSum=0;\n\n    debits.forEach((debit) => {\n      debitSum += debit.amount;\n    })\n\n    credits.forEach((credit) => {\n      creditSum += credit.amount;\n    })\n\n    let updatedAccountBalance = (creditSum - debitSum).toFixed(2);\n    this.setState({accountBalance: updatedAccountBalance});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance}/>)\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}